apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: message-service
  template:
    metadata:
      labels:
        component: message-service
    spec:
      initContainers:
        - name: wait-db
          image: metalom/message-service:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "until nslookup message-service-mysql-cluster-ip.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for db; sleep 2; done"]
        - name: up-migrations
          image: metalom/message-service:latest
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', "bin/console doctrine:migrations:migrate -q"]
          env:
            - name: DATABASE_URL
              value: 'mysql://user:secret@message-service-mysql-cluster-ip:3306/message_service?serverVersion=8.0'
      containers:
        - name: message-service
          image: metalom/message-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          env:
            - name: APP_ENV
              value: 'prod'
            - name: TASK_GRPC_SERVER_HOST
              value: 'trigger-service-cluster-ip:50051'
            - name: MESSENGER_TRANSPORT_DSN
              value: 'amqp://rabbitmq:secret@rabbitmq-message-cluster-ip:5672/%2f'
            - name: DATABASE_URL
              value: 'mysql://user:secret@message-service-mysql-cluster-ip:3306/message_service?serverVersion=8.0'
            - name: CORS_ALLOW_ORIGIN
              value: '^https?://dashboard\.message\.com$'
